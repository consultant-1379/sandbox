{"paragraphs":[{"title":"Welcome to AIA.","text":"This tutorial uses AIA schema registry client to register new schema in schema registry, and the new schema will be used in other tutorials. Due to the bug, unable to delete schema, as described in https://github.com/confluentinc/schema-registry/issues/380, this tutorial is for information purpose and can't be used as live tutorial. ","dateUpdated":"2017-01-18T07:13:48-0500","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":false,"editorMode":"ace/mode/scala","title":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1484737587157_469719920","id":"20170118-060627_1337760649","dateCreated":"2017-01-18T06:06:27-0500","status":"READY","progressUpdateIntervalMs":500,"$$hashKey":"object:198"},{"title":"INTRODUCTION","text":"%md\n*[confluent schema registry](http://docs.confluent.io/3.1.1/schema-registry/docs/index.html) is included in this sandbox, used to store and retrieve the [AVRO schemas](http://avro.apache.org/docs/1.8.1/spec.html). Schema registry client is AIA SDK, which can be used to batch import avro schema files or radio events based XML schema files.*\n\n*sandbox folder /batchimport contains the jar file for schema registry client. You can run the following command to import schema folder*\n    java -jar /batchimport/batchimport.jar -dir=[schema folder] -registry=[schema registry server]\n               \n*The following two folders contain pre-cooked avro schemas*\n1. /schema/avro - telcom network event based schema: celltrace, ctum, ebm etc\n2. /home/cloud-user/example/avro-schema - example schema, like apache web server access log as described in the **_AVRO SCHEMA FILE_ paragraph**\n\n*For example you can run the following command to import example schemas,*\n    java -jar /batchimport/batchimport.jar -dir=/home/cloud-user/example/avro-schema/ -registry=http://localhost:8081\n    \n*Please use schema registry rest API to check whether the schema has been imported succesfully or not, like* **_CHECK SCHEMA IN SCHEMA REGISTRY_** paragraph\n\n","dateUpdated":"2017-01-24T06:30:22-0500","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/markdown","title":true,"editorHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1484741618694_-1703367059","id":"20170118-071338_293494160","result":{"code":"SUCCESS","type":"HTML","msg":"<p><em><a href=\"http://docs.confluent.io/3.1.1/schema-registry/docs/index.html\">confluent schema registry</a> is included in this sandbox, used to store and retrieve the <a href=\"http://avro.apache.org/docs/1.8.1/spec.html\">AVRO schemas</a>. Schema registry client is AIA SDK, which can be used to batch import avro schema files or radio events based XML schema files.</em></p>\n<p><em>sandbox folder /batchimport contains the jar file for schema registry client. You can run the following command to import schema folder</em></p>\n<pre><code>java -jar /batchimport/batchimport.jar -dir=[schema folder] -registry=[schema registry server]\n</code></pre>\n<p><em>The following two folders contain pre-cooked avro schemas</em></p>\n<ol>\n<li>/schema/avro - telcom network event based schema: celltrace, ctum, ebm etc</li>\n<li>/home/cloud-user/example/avro-schema - example schema, like apache web server access log as described in the <strong><em>AVRO SCHEMA FILE</em> paragraph</strong></li>\n</ol>\n<p><em>For example you can run the following command to import example schemas,</em></p>\n<pre><code>java -jar /batchimport/batchimport.jar -dir=/home/cloud-user/example/avro-schema/ -registry=http://localhost:8081\n</code></pre>\n<p><em>Please use schema registry rest API to check whether the schema has been imported succesfully or not, like</em> <strong><em>CHECK SCHEMA IN SCHEMA REGISTRY</em></strong> paragraph</p>\n"},"dateCreated":"2017-01-18T07:13:38-0500","dateStarted":"2017-01-18T08:13:52-0500","dateFinished":"2017-01-18T08:13:52-0500","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:199"},{"title":"AVRO SCHEMA FILE","text":"%sh\ncat /home/cloud-user/example/avro-schema/accesslog.avsc","dateUpdated":"2017-01-18T08:01:03-0500","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/sh","title":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1484743118450_-2085109132","id":"20170118-073838_1270002248","result":{"code":"SUCCESS","type":"TEXT","msg":"{\n  \"type\": \"record\",\n  \"name\": \"access_log\",\n  \"namespace\": \"com.ericsson.aia.example.model\",\n  \"doc\": \"This schema is used to represent apache httpd access log\",\n  \"fields\": [{\n      \"name\": \"time\",\n      \"type\": \"string\",\n      \"doc\": \"The time at which the request was received. The format, using strftime() terminology, is as follows: [%d/%b/%Y:%H:%M:%S %z]\"\n    }, {\n      \"name\": \"remote_host\",\n      \"type\": \"string\",\n      \"doc\": \"The apparent Internet address of the requester. Intermediate proxies and firewalls might obscure the actual address of the machine making the request.\"\n    }, {\n      \"name\": \"requester\",\n      \"type\": \"string\",\n      \"doc\": \"The canonical user ID of the requester, or the string Anonymous  for unauthenticated requests.\"\n    }, {\n      \"name\": \"request_uri\",\n      \"type\": \"string\",\n      \"doc\": \"The Request-URI part of the HTTP request message.\"\n    }, {\n      \"name\": \"http_status\",\n      \"type\": \"int\",\n      \"doc\": \"The numeric HTTP status code of the response.\"\n    }, {\n      \"name\": \"bytes_sent\",\n      \"type\": \"int\",\n      \"doc\": \"The number of response bytes sent, excluding HTTP protocol overhead, or  -  if zero.\"\n    }, {\n      \"name\": \"referrer\",\n      \"type\": \"string\",\n      \"doc\": \"The value of the HTTP Referrer header, if present. HTTP user-agents (e.g. browsers) typically set this header to the URL of the linking or embedding page when making a request.\"\n    }, {\n      \"name\": \"user_agent\",\n      \"type\": \"string\",\n      \"doc\": \"The value of the HTTP User-Agent header.\"\n    }\n  ]\n}\n"},"dateCreated":"2017-01-18T07:38:38-0500","dateStarted":"2017-01-18T08:01:03-0500","dateFinished":"2017-01-18T08:01:03-0500","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:200"},{"title":"CHECK SCHEMA IN SCHEMA REGISTRY","text":"%sh\ncurl http://localhost:8081/subjects/com.ericsson.aia.example.model.access_log/versions/1","dateUpdated":"2017-01-18T08:13:14-0500","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/sh","title":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1484744395052_-1760186256","id":"20170118-075955_617419540","result":{"code":"SUCCESS","type":"TEXT","msg":"  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n\r  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0\r100  1483  100  1483    0     0   103k      0 --:--:-- --:--:-- --:--:--  111k\n{\"subject\":\"com.ericsson.aia.example.model.access_log\",\"version\":1,\"id\":1,\"schema\":\"{\\\"type\\\":\\\"record\\\",\\\"name\\\":\\\"access_log\\\",\\\"namespace\\\":\\\"com.ericsson.aia.example.model\\\",\\\"doc\\\":\\\"This schema is used to represent apache httpd access log\\\",\\\"fields\\\":[{\\\"name\\\":\\\"time\\\",\\\"type\\\":\\\"string\\\",\\\"doc\\\":\\\"The time at which the request was received. The format, using strftime() terminology, is as follows: [%d/%b/%Y:%H:%M:%S %z]\\\"},{\\\"name\\\":\\\"remote_host\\\",\\\"type\\\":\\\"string\\\",\\\"doc\\\":\\\"The apparent Internet address of the requester. Intermediate proxies and firewalls might obscure the actual address of the machine making the request.\\\"},{\\\"name\\\":\\\"requester\\\",\\\"type\\\":\\\"string\\\",\\\"doc\\\":\\\"The canonical user ID of the requester, or the string Anonymous  for unauthenticated requests.\\\"},{\\\"name\\\":\\\"request_uri\\\",\\\"type\\\":\\\"string\\\",\\\"doc\\\":\\\"The Request-URI part of the HTTP request message.\\\"},{\\\"name\\\":\\\"http_status\\\",\\\"type\\\":\\\"int\\\",\\\"doc\\\":\\\"The numeric HTTP status code of the response.\\\"},{\\\"name\\\":\\\"bytes_sent\\\",\\\"type\\\":\\\"int\\\",\\\"doc\\\":\\\"The number of response bytes sent, excluding HTTP protocol overhead, or  -  if zero.\\\"},{\\\"name\\\":\\\"referrer\\\",\\\"type\\\":\\\"string\\\",\\\"doc\\\":\\\"The value of the HTTP Referrer header, if present. HTTP user-agents (e.g. browsers) typically set this header to the URL of the linking or embedding page when making a request.\\\"},{\\\"name\\\":\\\"user_agent\\\",\\\"type\\\":\\\"string\\\",\\\"doc\\\":\\\"The value of the HTTP User-Agent header.\\\"}]}\"}"},"dateCreated":"2017-01-18T07:59:55-0500","dateStarted":"2017-01-18T08:13:14-0500","dateFinished":"2017-01-18T08:13:14-0500","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:201"},{"text":"","dateUpdated":"2017-01-18T08:13:24-0500","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1484745194606_-2065930815","id":"20170118-081314_190507120","dateCreated":"2017-01-18T08:13:14-0500","status":"READY","progressUpdateIntervalMs":500,"$$hashKey":"object:202"}],"name":"AIA avro schema tutorial","id":"2C7QD82GP","angularObjects":{"2C2SV9JGU:shared_process":[],"2C4B1DQ34:shared_process":[],"2C332HSPS:shared_process":[],"2C3G3Y5DE:shared_process":[],"2C45ZXVW3:shared_process":[],"2C1X2MM3C:shared_process":[],"2C24WBWDX:shared_process":[],"2C3VRXFSD:shared_process":[],"2C3DUDUYQ:shared_process":[],"2C5DTA1EW:shared_process":[],"2C42MS496:shared_process":[],"2C5UWKWUT:shared_process":[],"2C24XPFQY:shared_process":[],"2C5JJF3QE:shared_process":[],"2C3P8XFW5:shared_process":[],"2C4GNR8T1:shared_process":[],"2C4NBHZS6:shared_process":[],"2C51FQN27:shared_process":[]},"config":{"looknfeel":"default"},"info":{}}